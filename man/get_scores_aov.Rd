% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/score-aov.R
\name{get_scores_aov}
\alias{get_scores_aov}
\title{Compute F-statistic and p-value scores using ANOVA F-test}
\usage{
get_scores_aov(score_obj, data, outcome, ...)
}
\arguments{
\item{score_obj}{A score object. See \code{\link[=score_aov]{score_aov()}} for details.}

\item{data}{A data frame or tibble containing the outcome and predictor variables.}

\item{outcome}{A character string specifying the name of the outcome variable.}

\item{...}{NULL}
}
\value{
A tibble of result with one row per predictor, and four columns:
\itemize{
\item \code{name}: the name of scoring metric.
\item \code{score}: the score for the predictor-outcome pair.
\item \code{predictor}: the name of the predictor.
\item \code{outcome}: the name of the outcome.
}
}
\description{
Evaluate the relationship between a numeric outcome and a categorical predictor,
or vice versa, by computing the ANOVA F-statistic or p-value.
Output a tibble result with with one row per predictor, and four columns:
\code{name}, \code{score}, \code{predictor}, and \code{outcome}.
}
\examples{
data(ames, package = "modeldata")
ames_subset <- modeldata::ames |>
  dplyr::select(
    Sale_Price,
    MS_SubClass,
    MS_Zoning,
    Lot_Frontage,
    Lot_Area,
    Street
  )
# Return score as F-statistics
score_obj <- score_aov()
score_res <- get_scores_aov(
  score_obj,
  data = ames_subset,
  outcome = "Sale_Price"
)
score_res
# Return score as p-values
score_obj <- score_aov(score_type = "pval")
score_res <- get_scores_aov(
  score_obj,
  data = ames_subset,
  outcome = "Sale_Price"
)
score_res
# Return raw p-values instead of -log10(p-values)
score_obj <- score_aov(
  score_type = "pval",
  neg_log10 = FALSE,
  direction = "minimize",
  fallback_value = 0
)
score_res <- get_scores_aov(
  score_obj,
  data = ames_subset,
  outcome = "Sale_Price"
)
score_res
}
