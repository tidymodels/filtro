% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/score-cor.R
\docType{data}
\name{score_cor_pearson}
\alias{score_cor_pearson}
\alias{score_cor_spearman}
\title{Scoring via correlation coefficient}
\format{
An object of class \code{filtro::class_score_cor} (inherits from \code{filtro::class_score}, \code{S7_object}) of length 1.

An object of class \code{filtro::class_score_cor} (inherits from \code{filtro::class_score}, \code{S7_object}) of length 1.
}
\usage{
score_cor_pearson

score_cor_spearman
}
\arguments{
\item{object}{A score class object based on \code{class_score_cor}.}

\item{formula}{A standard R formula with a single outcome on the right-hand
side and one or more predictors (or \code{.}) on the left-hand side. The data are
processed via \code{\link[stats:model.frame]{stats::model.frame()}}.}

\item{data}{A data frame containing the relevant columns defined by the
formula.}

\item{...}{Further arguments passed to or from other methods.}
}
\description{
These objects are used when:
\itemize{
\item The predictors are numeric and the outcome is numeric.
}

In this case, a correlation coefficient (via \code{\link[stats:cor]{stats::cor()}}) is computed with
the proper variable roles. Values closer to 1 or -1 (i.e., \code{abs(cor_pearson)}
closer to 1) are associated with more important predictors.

\code{score_cor_pearson} and \code{score_cor_spearman} are objects that define the technique.
To apply the filter on data, you would use the \code{\link[=fit]{fit()}} method:

\preformatted{
  fit(score_cor_pearson, formula, data)
}

See the Examples section below.
}
\details{
The function will determine which columns are predictors and outcomes and
compute correlations; no user intervention is required.

Missing values are removed for each predictor/outcome combination being
scored.
In cases where \code{\link[=cor]{cor()}} fail, the scoring proceeds silently, and
a missing value is given for the score.
}
\examples{
\dontshow{if (rlang::is_installed("modeldata")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

library(dplyr)

ames_subset <- modeldata::ames |>
  select(
    Sale_Price,
    MS_SubClass,
    MS_Zoning,
    Lot_Frontage,
    Lot_Area,
    Street
  )

ames_cor_pearson_res <-
  score_cor_pearson |>
  fit(Sale_Price ~ ., data = ames_subset)
ames_cor_pearson_res@results

ames_cor_spearman_res <-
  score_cor_spearman |>
  fit(Sale_Price ~ ., data = ames_subset)
ames_cor_spearman_res@results
\dontshow{\}) # examplesIf}
}
\keyword{datasets}
